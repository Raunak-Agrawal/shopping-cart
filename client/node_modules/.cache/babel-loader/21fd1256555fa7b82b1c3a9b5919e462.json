{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"../redux/root-reducer\"; // import ReduxThunk from \"redux-thunk\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nlet middlewares = [sagaMiddleware]; // eslint-disable-next-line no-undef\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/home/tunerlabs/shopping-cart/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,IAAIG,WAAW,GAAG,CAACD,cAAD,CAAlB,C,CACA;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AACP,OAAO,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AAEPN,cAAc,CAACQ,GAAf,CAAmBT,QAAnB;AAEA,eAAe;AAAEO,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"../redux/root-reducer\";\n// import ReduxThunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./root-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nlet middlewares = [sagaMiddleware];\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport default { store, persistor };\n"]},"metadata":{},"sourceType":"module"}