{"ast":null,"code":"import { ShopActionTypes } from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collections => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collections\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    let collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapShot => {\n      let collectionArrayToObject = convertCollectionSnapshotToMap(snapShot);\n      dispatch(fetchCollectionsSuccess(collectionArrayToObject));\n    }).catch(err => {\n      dispatch(fetchCollectionsFailure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/home/tunerlabs/shopping-cart/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collections","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapShot","collectionArrayToObject","catch","err","message"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAGP,OAAO,MAAMC,uBAAuB,GAAGC,WAAW,KAAK;AACrDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA3C;AAIP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,QAAIC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAApB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAIC,uBAAuB,GAAGlB,8BAA8B,CAACiB,QAAD,CAA5D;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACc,uBAAD,CAAxB,CAAR;AACD,KALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZR,MAAAA,QAAQ,CAACJ,uBAAuB,CAACY,GAAG,CAACC,OAAL,CAAxB,CAAR;AACD,KARH;AASD,GAZD;AAaD,CAdM","sourcesContent":["import { ShopActionTypes } from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collections => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collections\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    let collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef\n      .get()\n      .then(snapShot => {\n        let collectionArrayToObject = convertCollectionSnapshotToMap(snapShot);\n        dispatch(fetchCollectionsSuccess(collectionArrayToObject));\n      })\n      .catch(err => {\n        dispatch(fetchCollectionsFailure(err.message));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}