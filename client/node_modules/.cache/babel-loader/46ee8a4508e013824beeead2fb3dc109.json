{"ast":null,"code":"import _defineProperty from \"/home/tunerlabs/shopping-cart/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyDjYWRtMNkwWXSidhkYIl0wtSyO_iZnD_k\",\n  authDomain: \"shopping-cart-43202.firebaseapp.com\",\n  databaseURL: \"https://shopping-cart-43202.firebaseio.com\",\n  projectId: \"shopping-cart-43202\",\n  storageBucket: \"\",\n  messagingSenderId: \"651593916575\",\n  appId: \"1:651593916575:web:2ae8d862eaf41c99b482aa\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (user, additonalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(\"users/\".concat(user.uid));\n  let snapshot = await userRef.get();\n\n  if (!snapshot.exists && (user.displayName || additonalData)) {\n    console.log(\"snapshot doesn't exist\");\n    let displayName = user.displayName,\n        email = user.email;\n    let createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additonalData));\n    } catch (e) {\n      console.log(\"error getting user ref\", e);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  console.log(collectionKey, objectToAdd);\n  let collectionRef = firestore.collection(collectionKey); // console.log(collectionRef);\n\n  let batch = firestore.batch();\n  objectToAdd.forEach(obj => {\n    let newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionSnapshotToMap = collections => {\n  let transformedArray = collections.docs.map(doc => {\n    let _doc$data = doc.data(),\n        title = _doc$data.title,\n        items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  }); // console.log(transformedArray);\n\n  return transformedArray.reduce((accumulator, currentObj) => {\n    accumulator[currentObj.title.toLowerCase()] = currentObj;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      unsubscribe();\n      resolve(user);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n}); // export const SignInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;","map":{"version":3,"sources":["/home/tunerlabs/shopping-cart/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUserProfileDocument","user","additonalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","console","log","email","createdAt","Date","set","e","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformedArray","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","currentObj","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyDjYWRtMNkwWXSidhkYIl0wtSyO_iZnD_k\",\n  authDomain: \"shopping-cart-43202.firebaseapp.com\",\n  databaseURL: \"https://shopping-cart-43202.firebaseio.com\",\n  projectId: \"shopping-cart-43202\",\n  storageBucket: \"\",\n  messagingSenderId: \"651593916575\",\n  appId: \"1:651593916575:web:2ae8d862eaf41c99b482aa\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (user, additonalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  let snapshot = await userRef.get();\n  if (!snapshot.exists && (user.displayName || additonalData)) {\n    console.log(\"snapshot doesn't exist\");\n    let { displayName, email } = user;\n    let createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additonalData\n      });\n    } catch (e) {\n      console.log(\"error getting user ref\", e);\n    }\n  }\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  console.log(collectionKey, objectToAdd);\n\n  let collectionRef = firestore.collection(collectionKey);\n  // console.log(collectionRef);\n\n  let batch = firestore.batch();\n  objectToAdd.forEach(obj => {\n    let newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\n\nexport const convertCollectionSnapshotToMap = collections => {\n  let transformedArray = collections.docs.map(doc => {\n    let { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  // console.log(transformedArray);\n  return transformedArray.reduce((accumulator, currentObj) => {\n    accumulator[currentObj.title.toLowerCase()] = currentObj;\n    return accumulator;\n  }, {});\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      unsubscribe();\n      resolve(user);\n    }, reject);\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\n\n// export const SignInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}