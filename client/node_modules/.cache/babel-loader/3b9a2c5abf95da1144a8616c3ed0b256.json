{"ast":null,"code":"import _objectWithoutProperties from \"/home/tunerlabs/shopping-cart/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/tunerlabs/shopping-cart/client/src/components/collection-preview/collection-preview.component.jsx\";\nimport React from \"react\";\nimport \"./collection-preview.styles.scss\";\nimport PropTypes from \"prop-types\";\nimport CollectionItem from \"../collection-item/collection-item.component\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction CollectionPreview(_ref) {\n  let title = _ref.title,\n      items = _ref.items,\n      props = _objectWithoutProperties(_ref, [\"title\", \"items\"]);\n\n  return React.createElement(\"div\", {\n    className: \"collection-preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"\".concat(props.match.url, \"/\").concat(props.routeName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, title.toUpperCase())), React.createElement(\"div\", {\n    className: \"preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, items.filter((item, idx) => idx < 4).map(item => {\n    return React.createElement(CollectionItem, {\n      key: item.id,\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  })));\n}\n\nCollectionPreview.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  routeName: PropTypes.string,\n  match: PropTypes.object\n};\nexport default withRouter(CollectionPreview);","map":{"version":3,"sources":["/home/tunerlabs/shopping-cart/client/src/components/collection-preview/collection-preview.component.jsx"],"names":["React","PropTypes","CollectionItem","Link","withRouter","CollectionPreview","title","items","props","match","url","routeName","toUpperCase","filter","item","idx","map","id","propTypes","string","isRequired","array","object"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AAEA,SAASC,iBAAT,OAAuD;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAATC,KAAS;;AACrD,SACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,YAAKA,KAAK,CAACC,KAAN,CAAYC,GAAjB,cAAwBF,KAAK,CAACG,SAA9B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,WAAN,EADH,CADF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CACHM,MADF,CACS,CAACC,IAAD,EAAOC,GAAP,KAAeA,GAAG,GAAG,CAD9B,EAEEC,GAFF,CAEMF,IAAI,IAAI;AACX,WAAO,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACG,EAA1B;AAA8B,MAAA,IAAI,EAAEH,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAJF,CADH,CANF,CADF;AAgBD;;AACDT,iBAAiB,CAACa,SAAlB,GAA8B;AAC5BZ,EAAAA,KAAK,EAAEL,SAAS,CAACkB,MAAV,CAAiBC,UADI;AAE5Bb,EAAAA,KAAK,EAAEN,SAAS,CAACoB,KAAV,CAAgBD,UAFK;AAG5BT,EAAAA,SAAS,EAAEV,SAAS,CAACkB,MAHO;AAI5BV,EAAAA,KAAK,EAAER,SAAS,CAACqB;AAJW,CAA9B;AAMA,eAAelB,UAAU,CAACC,iBAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport \"./collection-preview.styles.scss\";\nimport PropTypes from \"prop-types\";\nimport CollectionItem from \"../collection-item/collection-item.component\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction CollectionPreview({ title, items, ...props }) {\n  return (\n    <div className=\"collection-preview\">\n      <h1 className=\"title\">\n        <Link to={`${props.match.url}/${props.routeName}`}>\n          {title.toUpperCase()}\n        </Link>\n      </h1>\n      <div className=\"preview\">\n        {items\n          .filter((item, idx) => idx < 4)\n          .map(item => {\n            return <CollectionItem key={item.id} item={item} />;\n          })}\n      </div>\n    </div>\n  );\n}\nCollectionPreview.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  routeName: PropTypes.string,\n  match: PropTypes.object\n};\nexport default withRouter(CollectionPreview);\n"]},"metadata":{},"sourceType":"module"}