{"ast":null,"code":"var _jsxFileName = \"/home/tunerlabs/shopping-cart/client/src/components/collection-item/collection-item.component.jsx\";\nimport React from \"react\";\nimport \"./collection-item.styles.scss\";\nimport PropTypes from \"prop-types\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { addItem } from \"../../redux/cart/cart.actions\";\nimport { connect } from \"react-redux\";\n\nfunction CollectionItem({\n  item,\n  addItem\n}) {\n  let name = item.name,\n      price = item.price,\n      imageUrl = item.imageUrl;\n  return React.createElement(\"div\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: \"url(\".concat(imageUrl, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"$ \".concat(price))), React.createElement(CustomButton, {\n    onClick: () => addItem(item),\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Add to cart\"));\n}\n\nCollectionItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  addItem: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/home/tunerlabs/shopping-cart/client/src/components/collection-item/collection-item.component.jsx"],"names":["React","PropTypes","CustomButton","addItem","connect","CollectionItem","item","name","price","imageUrl","backgroundImage","propTypes","object","isRequired","func","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,IAAF;AAAQH,EAAAA;AAAR,CAAxB,EAA2C;AAAA,MACnCI,IADmC,GACTD,IADS,CACnCC,IADmC;AAAA,MAC7BC,KAD6B,GACTF,IADS,CAC7BE,KAD6B;AAAA,MACtBC,QADsB,GACTH,IADS,CACtBG,QADsB;AAEzC,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,gBAASD,QAAT;AAAjB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,IAAxB,CADF,EAEE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA8BC,KAA9B,EAFF,CAFF,EAME,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAML,OAAO,CAACG,IAAD,CAApC;AAA4C,IAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CADF;AAYD;;AACDD,cAAc,CAACM,SAAf,GAA2B;AACzBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADE;AAEzBV,EAAAA,OAAO,EAAEF,SAAS,CAACa;AAFM,CAA3B;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,OAAO,EAAEG,IAAI,IAAIU,QAAQ,CAACb,OAAO,CAACG,IAAD,CAAR;AADa,CAAL,CAAnC;;AAGA,eAAeF,OAAO,CACpB,IADoB,EAEpBW,kBAFoB,CAAP,CAGbV,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport \"./collection-item.styles.scss\";\nimport PropTypes from \"prop-types\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { addItem } from \"../../redux/cart/cart.actions\";\nimport { connect } from \"react-redux\";\n\nfunction CollectionItem({ item, addItem }) {\n  let { name, price, imageUrl } = item;\n  return (\n    <div className=\"collection-item\">\n      <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\n      <div className=\"collection-footer\">\n        <span className=\"name\">{name}</span>\n        <span className=\"price\">{`$ ${price}`}</span>\n      </div>\n      <CustomButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </CustomButton>\n    </div>\n  );\n}\nCollectionItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  addItem: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CollectionItem);\n"]},"metadata":{},"sourceType":"module"}