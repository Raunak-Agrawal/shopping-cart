{"ast":null,"code":"import _objectWithoutProperties from \"/home/tunerlabs/shopping-cart/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/tunerlabs/shopping-cart/client/src/components/with-spinner/with-spinner.component.jsx\";\n\n/* eslint-disable react/display-name */\n\n/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\";\n\nconst WithSpinner = WrappedComponnet => (_ref) => {\n  let isLoading = _ref.isLoading,\n      props = _objectWithoutProperties(_ref, [\"isLoading\"]);\n\n  return isLoading ? React.createElement(SpinnerOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(SpinnerContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  })) : React.createElement(WrappedComponnet, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/home/tunerlabs/shopping-cart/client/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponnet","isLoading","props"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,uBAAjD;;AACA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI,UAA6B;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAZC,KAAY;;AACnE,SAAOD,SAAS,GACd,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADc,GAKd,oBAAC,gBAAD,oBAAsBC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF;AAOD,CARD;;AAUA,eAAeH,WAAf","sourcesContent":["/* eslint-disable react/display-name */\n/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\";\nconst WithSpinner = WrappedComponnet => ({ isLoading, ...props }) => {\n  return isLoading ? (\n    <SpinnerOverlay>\n      <SpinnerContainer></SpinnerContainer>\n    </SpinnerOverlay>\n  ) : (\n    <WrappedComponnet {...props} />\n  );\n};\n\nexport default WithSpinner;\n"]},"metadata":{},"sourceType":"module"}